name: Build Mod

on:
  push:
    paths:
      - "Dockerfile"
      - "root/**"
      - ".github/workflows/build.yml"
    branches:
      - "mods/**"

jobs:
  checks:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    needs: [checks]

    strategy:
      matrix:
        architecture: [linux-amd64]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          ARCHITECTURE=${{ matrix.architecture }}
          MODNAME=${GITHUB_REF//refs\/heads\//}
          echo ::set-output name=platform::${ARCHITECTURE//-/\/}
          echo ::set-output name=tag::"$(echo ${GITHUB_REPOSITORY//docker-/}:${MODNAME//\//-} | tr '[:upper:]' '[:lower:]')"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: ${{ steps.prep.outputs.platform }}
          file: ./Dockerfile
          tags: |
            ${{ steps.prep.outputs.tag }}

      - name: Dive Analysis
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: "${{ steps.prep.outputs.tag }}"
